{"version":3,"file":"static/js/433.46b8e2b1.chunk.js","mappings":"uQAAA,IAAMA,EAAW,+BACXC,EAAU,mCAEhB,SAASC,IAA+C,IAAxBC,EAAuB,uDAAjB,GAAIC,EAAa,uDAAJ,CAAC,EAClD,OAAOC,MAAMF,EAAKC,GAAQE,MAAK,SAAAC,GAC7B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,mBAElB,OAAOF,EAASG,MACjB,GACF,CAEM,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,uCACeC,GAE7C,CAEM,SAASW,EAAaC,GAC3B,OAAOX,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0BY,GAExD,CAEM,SAASC,EAAkBC,GAChC,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,oBACad,GAE3C,CAEM,SAASe,EAAeD,GAC7B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,GAEnD,CAEM,SAASgB,EAAkBF,GAChC,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,GAEnD,C,yGCvCD,EAA4B,wBAA5B,EAAgE,wBAAhE,EAAoG,wBAApG,EAAyI,yBAAzI,EAA4K,sBAA5K,EAA+M,yB,SCIhM,SAASiB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,MACGL,MAAK,SAAAqB,GACJN,EAAUM,EAAKC,SACfL,GAAW,EACZ,IACAM,OAAM,SAAAL,GACLC,EAASD,GACTD,GAAW,EACZ,GACJ,GAAE,IAECD,GAAgB,+CAChBE,GACK,qEAA6CA,EAAMM,YAG1D,4BACE,kDACA,eAAIC,UAAWC,EAAf,SACGZ,EAAOa,KAAI,SAAAC,GAAK,OACf,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAML,UAAWC,EAA5C,UACGE,EAAMG,aACL,gBACEC,IAAG,yCAAoCJ,EAAMG,aAC7CE,IAAKL,EAAMM,MACXT,UAAWC,KAGb,gBAAKD,UAAWC,EAAhB,iCAEF,iBAAMD,UAAWC,EAAjB,SAAkCE,EAAMM,YAXnCN,EAAME,GADA,QAmBxB,C","sources":["apiService.js","webpack://react-homework-template/./src/components/Home/Home.module.css?58dd","components/Home/Home.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7e0e2e2f9218fa3d19d5f8d5dd18ff00';\n\nfunction fetchWithErrorHandling(url = '', config = {}) {\n  return fetch(url, config).then(response => {\n    if (!response.ok) {\n      throw new Error('Failed to fetch');\n    }\n    return response.json();\n  });\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function searchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Home_movieList__dew6t\",\"movieItem\":\"Home_movieItem__yfa+9\",\"movieLink\":\"Home_movieLink__Vy9G5\",\"movieImage\":\"Home_movieImage__F3Uf2\",\"noImage\":\"Home_noImage__ENWxv\",\"movieTitle\":\"Home_movieTitle__Zx60k\"};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTrendingMovies } from '../../apiService';\nimport css from './Home.module.css';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchTrendingMovies()\n      .then(data => {\n        setMovies(data.results);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <div>Loading movies...</div>;\n  if (error)\n    return <div>There was an error loading the movies: {error.message}</div>;\n\n  return (\n    <div>\n      <h1>Popular Movies Today</h1>\n      <ul className={css.movieList}>\n        {movies.map(movie => (\n          <li key={movie.id} className={css.movieItem}>\n            <Link to={`/movies/${movie.id}`} className={css.movieLink}>\n              {movie.poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n                  alt={movie.title}\n                  className={css.movieImage}\n                />\n              ) : (\n                <div className={css.noImage}>No Image Available</div>\n              )}\n              <span className={css.movieTitle}>{movie.title}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","then","response","ok","Error","json","fetchTrendingMovies","searchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","Home","useState","movies","setMovies","loading","setLoading","error","setError","useEffect","data","results","catch","message","className","css","map","movie","to","id","poster_path","src","alt","title"],"sourceRoot":""}