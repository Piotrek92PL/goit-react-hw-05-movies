{"version":3,"file":"static/js/653.cb02a17d.chunk.js","mappings":"uQAAA,IAAMA,EAAW,+BACXC,EAAU,mCAEhB,SAASC,IAA+C,IAAxBC,EAAuB,uDAAjB,GAAIC,EAAa,uDAAJ,CAAC,EAClD,OAAOC,MAAMF,EAAKC,GAAQE,MAAK,SAAAC,GAC7B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,mBAElB,OAAOF,EAASG,MACjB,GACF,CAEM,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,uCACeC,GAE7C,CAEM,SAASW,EAAaC,GAC3B,OAAOX,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0BY,GAExD,CAEM,SAASC,EAAkBC,GAChC,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,oBACad,GAE3C,CAEM,SAASe,EAAeD,GAC7B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,GAEnD,CAEM,SAASgB,EAAkBF,GAChC,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,GAEnD,C,0GCvCD,EAA4B,0BAA5B,EAAkE,0BAAlE,EAAwG,0BAAxG,EAA+I,2BAA/I,EAAoL,wBAApL,EAAyN,2B,SCI1M,SAASiB,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAON,EAAP,KAAcO,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACHV,IACLD,EAAAA,EAAAA,IAAaC,GAAOP,MAAK,SAAAkB,GAAI,OAAIF,EAAUE,EAAKC,QAAnB,GAC9B,GAAE,CAACZ,IAMJ,OACE,4BACE,2BACE,kBAAOa,KAAK,OAAOC,MAAOd,EAAOe,SAPlB,SAAAC,GACnBT,EAASS,EAAEC,OAAOH,MACnB,OAOG,eAAII,UAAWC,EAAf,SACGX,EAAOY,KAAI,SAAAC,GAAK,OACf,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAML,UAAWC,EAA5C,UACGE,EAAMG,aACL,gBACEC,IAAG,yCAAoCJ,EAAMG,aAC7CE,IAAKL,EAAMM,MACXT,UAAWC,KAGb,gBAAKD,UAAWC,EAAhB,uBAEF,iBAAMD,UAAWC,EAAjB,SAAqCE,EAAMM,YAXtCN,EAAME,GADA,QAmBxB,C","sources":["apiService.js","webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7e0e2e2f9218fa3d19d5f8d5dd18ff00';\n\nfunction fetchWithErrorHandling(url = '', config = {}) {\n  return fetch(url, config).then(response => {\n    if (!response.ok) {\n      throw new Error('Failed to fetch');\n    }\n    return response.json();\n  });\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function searchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Movies_movieList__3O+kj\",\"movieItem\":\"Movies_movieItem__WBe6u\",\"movieLink\":\"Movies_movieLink__e75lb\",\"movieImage\":\"Movies_movieImage__7C3bK\",\"noImage\":\"Movies_noImage__ptZIg\",\"movieTitle\":\"Movies_movieTitle__5wMIS\"};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { searchMovies } from 'apiService';\nimport styles from './Movies.module.css';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!query) return;\n    searchMovies(query).then(data => setMovies(data.results));\n  }, [query]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <form>\n        <input type=\"text\" value={query} onChange={handleChange} />\n      </form>\n      <ul className={styles.movieList}>\n        {movies.map(movie => (\n          <li key={movie.id} className={styles.movieItem}>\n            <Link to={`/movies/${movie.id}`} className={styles.movieLink}>\n              {movie.poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                  className={styles.movieImage}\n                />\n              ) : (\n                <div className={styles.noImage}>No Image</div>\n              )}\n              <span className={styles.movieTitle}>{movie.title}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","then","response","ok","Error","json","fetchTrendingMovies","searchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","Movies","useState","setQuery","movies","setMovies","useEffect","data","results","type","value","onChange","e","target","className","styles","map","movie","to","id","poster_path","src","alt","title"],"sourceRoot":""}